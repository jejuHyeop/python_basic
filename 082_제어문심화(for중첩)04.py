# 3 ~ N 까지 각각의 약수를 구하는 프로그램

# 문제를 보고 출력 결과를 예상하는 것부터 시작합니다.
# 3 : 2개 (1,2,3)
# 4 : 3개 (1,2,3,4)
# 5 : 2개 (1,2,3,4,5)

N = int(input("수 입력 : "))

# 자 이문제에서 반복포인트는 어디일까요?
# 앞서서 하나의 대상을 기준으로 했을 때 반복문을 사용했죠?
# 그런데 여기서는 1 ~ N 이라는 추가적인 반복이 필요하다는 것을 알 수 있을 것입니다.

for i in range(1, N+1):
    su = 0
    for j in range(1, i+1):  
        if i % j == 0:            
            su += 1
    print(i, ":", su,"개")

# 자 여기서 잠깐, 문제 푸실 때 꿀 접근법을 살펴볼게요!!!
# 구조적 분석을 해보는 습관을 길러보세요!!

# 15 번째 줄에서 su 를 초기화해주죠
# 16-18 번째 줄을 i 의 약수를 판단해서 세는 부분 이라고 생각해볼게요!
# 19 번째 줄에서 출력을 하죠?

# 그럼 구조화가 된거에요.
# 약수 세는 변수 초기화 - 약수세줌 - 출력 - 약수세는 변수 초기화 - 약수세줌 - ... 
# 이렇게 바라보는 버릇을 들여봅시다!!
# 그럼 확실히 출력결과 예상을 쉽게 할 수 있어요!!!

# 자!!! 이제까지 su += 1 이거 때문에 힘드신 분들은 집중!!
# 그럼 리스트에 담는 습관을 들이셔도되요
# len( ) 을 통해서 개수를 출력할 수 있기 때문이죠

for i in range(1, N+1):
    li = []
    for j in range(1, i+1):  
        if i % j == 0:            
            li.append(j)
    print(i, ":", len(li),"개")